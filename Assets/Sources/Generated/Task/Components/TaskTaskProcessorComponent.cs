//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TaskEntity {

    public TaskProcessorComponent taskProcessor { get { return (TaskProcessorComponent)GetComponent(TaskComponentsLookup.TaskProcessor); } }
    public bool hasTaskProcessor { get { return HasComponent(TaskComponentsLookup.TaskProcessor); } }

    public void AddTaskProcessor(TaskProcessor newValue) {
        var index = TaskComponentsLookup.TaskProcessor;
        var component = CreateComponent<TaskProcessorComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTaskProcessor(TaskProcessor newValue) {
        var index = TaskComponentsLookup.TaskProcessor;
        var component = CreateComponent<TaskProcessorComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTaskProcessor() {
        RemoveComponent(TaskComponentsLookup.TaskProcessor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TaskMatcher {

    static Entitas.IMatcher<TaskEntity> _matcherTaskProcessor;

    public static Entitas.IMatcher<TaskEntity> TaskProcessor {
        get {
            if (_matcherTaskProcessor == null) {
                var matcher = (Entitas.Matcher<TaskEntity>)Entitas.Matcher<TaskEntity>.AllOf(TaskComponentsLookup.TaskProcessor);
                matcher.componentNames = TaskComponentsLookup.componentNames;
                _matcherTaskProcessor = matcher;
            }

            return _matcherTaskProcessor;
        }
    }
}
