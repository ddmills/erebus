//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TaskEntity {

    public Verb verb { get { return (Verb)GetComponent(TaskComponentsLookup.Verb); } }
    public bool hasVerb { get { return HasComponent(TaskComponentsLookup.Verb); } }

    public void AddVerb(string newRoot, string newPast, string newPresent) {
        var index = TaskComponentsLookup.Verb;
        var component = CreateComponent<Verb>(index);
        component.root = newRoot;
        component.past = newPast;
        component.present = newPresent;
        AddComponent(index, component);
    }

    public void ReplaceVerb(string newRoot, string newPast, string newPresent) {
        var index = TaskComponentsLookup.Verb;
        var component = CreateComponent<Verb>(index);
        component.root = newRoot;
        component.past = newPast;
        component.present = newPresent;
        ReplaceComponent(index, component);
    }

    public void RemoveVerb() {
        RemoveComponent(TaskComponentsLookup.Verb);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TaskMatcher {

    static Entitas.IMatcher<TaskEntity> _matcherVerb;

    public static Entitas.IMatcher<TaskEntity> Verb {
        get {
            if (_matcherVerb == null) {
                var matcher = (Entitas.Matcher<TaskEntity>)Entitas.Matcher<TaskEntity>.AllOf(TaskComponentsLookup.Verb);
                matcher.componentNames = TaskComponentsLookup.componentNames;
                _matcherVerb = matcher;
            }

            return _matcherVerb;
        }
    }
}
