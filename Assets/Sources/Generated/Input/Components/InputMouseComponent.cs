//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity mouseEntity { get { return GetGroup(InputMatcher.Mouse).GetSingleEntity(); } }
    public MouseComponent mouse { get { return mouseEntity.mouse; } }
    public bool hasMouse { get { return mouseEntity != null; } }

    public InputEntity SetMouse(bool newLeftMouseDown, bool newMiddleMouseDown, bool newRightMouseDown) {
        if (hasMouse) {
            throw new Entitas.EntitasException("Could not set Mouse!\n" + this + " already has an entity with MouseComponent!",
                "You should check if the context already has a mouseEntity before setting it or use context.ReplaceMouse().");
        }
        var entity = CreateEntity();
        entity.AddMouse(newLeftMouseDown, newMiddleMouseDown, newRightMouseDown);
        return entity;
    }

    public void ReplaceMouse(bool newLeftMouseDown, bool newMiddleMouseDown, bool newRightMouseDown) {
        var entity = mouseEntity;
        if (entity == null) {
            entity = SetMouse(newLeftMouseDown, newMiddleMouseDown, newRightMouseDown);
        } else {
            entity.ReplaceMouse(newLeftMouseDown, newMiddleMouseDown, newRightMouseDown);
        }
    }

    public void RemoveMouse() {
        mouseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public MouseComponent mouse { get { return (MouseComponent)GetComponent(InputComponentsLookup.Mouse); } }
    public bool hasMouse { get { return HasComponent(InputComponentsLookup.Mouse); } }

    public void AddMouse(bool newLeftMouseDown, bool newMiddleMouseDown, bool newRightMouseDown) {
        var index = InputComponentsLookup.Mouse;
        var component = CreateComponent<MouseComponent>(index);
        component.leftMouseDown = newLeftMouseDown;
        component.middleMouseDown = newMiddleMouseDown;
        component.rightMouseDown = newRightMouseDown;
        AddComponent(index, component);
    }

    public void ReplaceMouse(bool newLeftMouseDown, bool newMiddleMouseDown, bool newRightMouseDown) {
        var index = InputComponentsLookup.Mouse;
        var component = CreateComponent<MouseComponent>(index);
        component.leftMouseDown = newLeftMouseDown;
        component.middleMouseDown = newMiddleMouseDown;
        component.rightMouseDown = newRightMouseDown;
        ReplaceComponent(index, component);
    }

    public void RemoveMouse() {
        RemoveComponent(InputComponentsLookup.Mouse);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherMouse;

    public static Entitas.IMatcher<InputEntity> Mouse {
        get {
            if (_matcherMouse == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.Mouse);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherMouse = matcher;
            }

            return _matcherMouse;
        }
    }
}
