//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    static readonly SnapToTileComponent snapToTileComponent = new SnapToTileComponent();

    public bool isSnapToTile {
        get { return HasComponent(GameComponentsLookup.SnapToTile); }
        set {
            if (value != isSnapToTile) {
                if (value) {
                    AddComponent(GameComponentsLookup.SnapToTile, snapToTileComponent);
                } else {
                    RemoveComponent(GameComponentsLookup.SnapToTile);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSnapToTile;

    public static Entitas.IMatcher<GameEntity> SnapToTile {
        get {
            if (_matcherSnapToTile == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SnapToTile);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSnapToTile = matcher;
            }

            return _matcherSnapToTile;
        }
    }
}
